package com.maverkick.data.models

/**
 * Class storage for the Student objects
 * @param studentId  the id of the student in the database
 * @param age age to make better recommendations and greater personalization
 * @param dailyStudyTimeMinutes  the number of minutes student would like study daily
 * @param interests  the list of Tags(disciplines) in which student interested
 * @param bricksCollected shows the total number of lessons completed
 * @param enrolledVideoCourses lists all the video courses student enrolled in right now
 * @param enrolledTextCourses lists all the text courses student enrolled in right now
 * @param createdTextCourses lists all the text courses generated by student
 * @param courseGenerationTries number of courses student could generate
 **/
data class Student(
    val studentId: String,
    val age: Int,
    val dailyStudyTimeMinutes: Int,
    val interests: List<String>,
    var bricksCollected: Int = 0,
    var enrolledVideoCourses: List<String> = emptyList(),
    var enrolledTextCourses: List<String> = emptyList(),
    var createdTextCourses: List<String> = emptyList(),
    var courseGenerationTries: Int = 0 // New field here
) {
    fun toFirebaseStudent(): FirebaseStudent {
        return FirebaseStudent(
            age,
            dailyStudyTimeMinutes,
            interests,
            bricksCollected,
            enrolledVideoCourses,
            enrolledTextCourses,
            createdTextCourses,
            courseGenerationTries
        )
    }
}

data class FirebaseStudent(
    val age: Int,
    val dailyStudyTimeMinutes: Int,
    val interests: List<String>,
    val bricksCollected: Int = 0,
    val enrolledVideoCourses: List<String> = emptyList(),
    val enrolledTextCourses: List<String> = emptyList(),
    val createdTextCourses: List<String> = emptyList(),
    val courseGenerationTries: Int = 5
) {
    fun toStudent(studentId: String): Student {
        return Student(
            studentId,
            age,
            dailyStudyTimeMinutes,
            interests,
            bricksCollected,
            enrolledVideoCourses,
            enrolledTextCourses,
            createdTextCourses,
            courseGenerationTries
        )
    }
}
